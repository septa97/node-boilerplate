#!/usr/bin/env node

import debug from 'debug';
import http from 'http';
import { green } from 'chalk';
import app from '../app';

const log = debug('server');
const PORT = createPort(process.env.PORT);
const server = http.createServer(app);

server.listen(PORT, () => log(`Server listening on port ${green(PORT)}`));

function createPort(port = 8000) {
  if (process.env.NODE_ENV === 'test') {
    return 3000;
  }

  return port;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`Port ${PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}
